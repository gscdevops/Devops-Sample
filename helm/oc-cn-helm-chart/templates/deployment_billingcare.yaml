apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ .Values.ocbc.bc.labels.name }}-deployment
    namespace: {{ .Release.Namespace }}
    labels:
        app.kubernetes.io/name: {{ .Values.ocbc.bc.labels.name }}
        app.kubernetes.io/version: {{ .Values.ocbc.bc.labels.version }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
    minReadySeconds: 0
    paused: false
    progressDeadlineSeconds: {{ .Values.ocbc.bc.deployment.deadlineSeconds }}
    replicas: 1
    revisionHistoryLimit: {{ .Values.ocbc.bc.deployment.revisionHistLimit }}
    selector: 
        matchLabels:
            app.kubernetes.io/name: {{ .Values.ocbc.bc.labels.name }}
    strategy: 
        type: Recreate
    template:
        metadata:
            labels: 
                app.kubernetes.io/name: {{ .Values.ocbc.bc.labels.name }}
                app.kubernetes.io/version: {{ .Values.ocbc.bc.labels.version }}
                app.kubernetes.io/managed-by: {{ .Release.Service }}
        spec:
            containers:
            -   name: {{ .Values.ocbc.bc.labels.name }}-cont
                image: {{ .Values.imageRepository }}{{ .Values.ocbc.bc.deployment.imageName }}{{ .Values.ocbc.bc.deployment.imageTag }}
                imagePullPolicy: {{ .Values.ocbc.bc.deployment.imagePullPolicy }}
                readinessProbe:
                    exec:
                        command: ["cat", "/u01/oracle/container_is_ready"]
                    failureThreshold: {{ .Values.ocbc.bc.deployment.probe.ready.maxAttempts }}
                    initialDelaySeconds: {{ .Values.ocbc.bc.deployment.probe.ready.delayInSec }}
                    periodSeconds: {{ .Values.ocbc.bc.deployment.probe.ready.intervalInSec }}
                ports:
                {{- if eq .Values.ocbc.bc.configEnv.isSSLEnabled true }}
                -   name: ocbc-port-https
                    containerPort: {{ .Values.ocbc.bc.configEnv.httpsPort }}
                    {{- if eq .Values.ocbc.bc.configEnv.isAdminPortEnabled true }}
                -   name: ocbc-port-admin
                    containerPort: {{ .Values.ocbc.bc.configEnv.adminPort }}
                    {{- end }}
                {{- else }}
                -   name: ocbc-port-http
                    containerPort: {{ .Values.ocbc.bc.configEnv.httpPort }}
                {{- end }}
                envFrom:
                -   configMapRef:
                        name: {{ .Values.ocbc.bc.configEnv.name }}
                {{- if eq .Values.ocbc.bc.deployment.isSDK true }}
                -   configMapRef:
                        name: {{ .Values.ocbc.bc.configEnvSDK.name }}
                {{- end }}
                -   secretRef:
                        name: {{ .Values.ocbc.bc.secretEnv.name }}
                volumeMounts:
                -   name: {{ .Values.ocbc.bc.deployment.volMntKeyStore.name }}
                    mountPath: {{ .Values.ocbc.bc.deployment.volMntKeyStore.mountPath }}
                -   name: {{ .Values.ocbc.bc.deployment.volMntPolicy.name }}
                    mountPath: {{ .Values.ocbc.bc.deployment.volMntPolicy.mountPath }}
                -   name: {{ .Values.ocbc.bc.deployment.volMntBatchPymt.name }}
                    mountPath: {{ .Values.ocbc.bc.deployment.volMntBatchPymt.mountPath }}
                -   name: {{ .Values.ocbc.bc.deployment.volMntLogs.name }}
                    mountPath: {{ .Values.ocbc.bc.deployment.volMntLogs.mountPath }}
                {{- if eq .Values.ocbc.bc.deployment.isSDK true }}
                -   name: {{ .Values.ocbc.bc.deployment.volMntDeployPlan.name }}
                    mountPath: {{ .Values.ocbc.bc.deployment.volMntDeployPlan.mountPath }}
                {{- end }}
            volumes:
            -   name: {{ .Values.ocbc.bc.deployment.volMntKeyStore.name }}
                secret:
                    secretName: {{ .Values.ocbc.bc.secretKeyStore.name }}
            -   name: {{ .Values.ocbc.bc.deployment.volMntPolicy.name }}
                persistentVolumeClaim:
                    claimName: {{ .Values.ocbc.bc.pvcPolicy.name }}
            -   name: {{ .Values.ocbc.bc.deployment.volMntBatchPymt.name }}
                persistentVolumeClaim:
                    claimName: {{ .Values.ocbc.bc.pvcBatchPymt.name }}
            -   name: {{ .Values.ocbc.bc.deployment.volMntLogs.name }}
                emptyDir: {}
            {{- if eq .Values.ocbc.bc.deployment.isSDK true }}
            -   name: {{ .Values.ocbc.bc.deployment.volMntDeployPlan.name }}
                configMap:
                    name: {{ .Values.ocbc.bc.configPlanSDK.name }}
            {{- end }}
